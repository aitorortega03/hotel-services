version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - hotel-service-1
      - hotel-service-2
      - hotel-service-3

  hotel-service-1:
    build: .
    container_name: hotel-service-1
    ports:
      - "8080:8081"
    networks:
      - app-network
    depends_on:
      - cache

  hotel-service-2:
    build: .
    container_name: hotel-service-2
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - cache

  hotel-service-3:
    build: .
    container_name: hotel-service-3
    ports:
      - "8082:8081"
    networks:
      - app-network
    depends_on:
      - cache

  cache:
    image: redis:latest
    container_name: cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - cache:/data

volumes:
  cache:
    driver: local

networks:
  app-network:
    driver: bridge